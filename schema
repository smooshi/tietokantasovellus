drop table if exists User;
create table User(
id integer primary key autoincrement,
email text not null,
name text not null unique,
salt text not null,
authenticated bool default 0,
created_at DATETIME not null,
edited_at DATETIME not null,
todos integer default 0,
goals integer default 0,
focus integer default 0
);

drop table if exists Note;
create table Note(
id integer primary key autoincrement,
user_id integer not null,
text text not null,
isTimed bool default 0,
time TIME,
date DATE not null,
FOREIGN KEY (user_id) REFERENCES User(id) ON DELETE CASCADE
);

drop table if exists Todo;
create table Todo(
id integer PRIMARY key autoincrement,
user_id integer not null,
text text not null,
isComplete bool default 0,
date DATE not null,
FOREIGN KEY (user_id) REFERENCES User(id) ON DELETE CASCADE
);

drop table if exists Goal;
create table Goal(
id integer PRIMARY key autoincrement,
user_id integer not null,
text text not null,
points integer default 0,
isActive bool default 1,
created_at DATETIME not null,
edited_at DATETIME not null,
end_date DATETIME,
FOREIGN KEY (user_id) REFERENCES User(id) ON DELETE CASCADE
);

drop table if exists Focus;
create table Focus(
id integer PRIMARY key autoincrement,
user_id integer not null,
text text not null,
points integer default 0,
isActive bool default 1,
created_at DATETIME not null,
edited_at DATETIME not null,
end_date DATETIME,
FOREIGN KEY (user_id) REFERENCES User(id) ON DELETE CASCADE
);

drop table if exists Groups;
create table Groups(
id integer PRIMARY key autoincrement,
name text not null,
description text not null,
created_at DATETIME not null,
edited_at DATETIME not null
);

drop table if exists User_in_Group;
create table User_in_Group(
user_id integer not null,
group_id integer not null,
isAdmin bool not null default 0,
FOREIGN KEY (user_id) REFERENCES User(id) ON DELETE CASCADE,
FOREIGN KEY (group_id) REFERENCES Groups(id) ON DELETE CASCADE
);